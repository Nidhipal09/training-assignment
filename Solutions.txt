1) List all the columns of the Salespeople table. 

DESC salespeople;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| snum  | int         | YES  |     | NULL    |       |
| sname | varchar(30) | YES  |     | NULL    |       |
| city  | varchar(30) | YES  |     | NULL    |       |
| comm  | int         | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+

or 
SHOW COLUMNS FROM salespeople;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| snum  | int         | YES  |     | NULL    |       |
| sname | varchar(30) | YES  |     | NULL    |       |
| city  | varchar(30) | YES  |     | NULL    |       |
| comm  | int         | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+

or 
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Salespeople';
+-------------+
| COLUMN_NAME |
+-------------+
| city        |
| comm        |
| sname       |
| snum        |
+-------------+


2) List all customers with a rating of 100. 

SELECT * FROM customers WHERE rating=100;
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+


3) Find the largest order taken by each salesperson on each date. 

SELECT MAX(amt), snum, odate FROM orders GROUP BY odate, snum;
+----------+------+------------+
| MAX(amt) | snum | odate      |
+----------+------+------------+
|  1098.16 | 1007 | 1990-10-03 |
|   767.19 | 1001 | 1990-10-03 |
|  1900.10 | 1004 | 1990-10-03 |
|  5160.45 | 1002 | 1990-10-03 |
|  1713.23 | 1003 | 1990-10-04 |
|    75.75 | 1002 | 1990-10-04 |
|  4723.00 | 1001 | 1990-10-05 |
|  1309.95 | 1002 | 1990-10-06 |
|  9891.88 | 1001 | 1990-10-06 |
+----------+------+------------+

4) Arrange the Order table by descending customer number. 

SELECT * FROM orders ORDER BY cnum DESC;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+


5) Find which salespeople currently have orders in the order table. 

SELECT distinct s.* FROM orders as o, salespeople as s where o.snum=s.snum;
+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1007 | Rifkin  | Barcelona |   15 |
| 1001 | Peel    | London    |   12 |
| 1004 | Motika  | London    |   11 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
+------+---------+-----------+------+


6) List names of all customers matched with the salespeople serving them. 

SELECT c.cname, s.sname FROM customers AS c, salespeople AS s WHERE s.snum=c.snum;
+----------+---------+
| cname    | sname   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Cisneros | Rifkin  |
| Pereira  | Motika  |
+----------+---------+


7) Find the names and numbers of all salespeople who have more than one customer. 

SELECT c.snum, s.sname, count(cnum) AS 'number of customers' FROM customers AS c, salespeople AS s WHERE s.snum=c.snum Group By s.snum Having COUNT(cnum)>1;
+------+--------+---------------------+
| snum | sname  | number of customers |
+------+--------+---------------------+
| 1001 | Peel   |                   2 |
| 1002 | Serres |                   2 |
+------+--------+---------------------+


8) Count the orders of each of the salespeople and output the results in descending order. 

SELECT COUNT(o.onum) AS 'number of orders', s.snum, s.sname FROM orders AS o, salespeople AS s WHERE s.snum=o.snum GROUP BY o.snum ORDER BY COUNT(o.onum) DESC;
+------------------+------+---------+
| number of orders | snum | sname   |
+------------------+------+---------+
|                3 | 1001 | Peel    |
|                3 | 1002 | Serres  |
|                2 | 1007 | Rifkin  |
|                1 | 1004 | Motika  |
|                1 | 1003 | AxelRod |
+------------------+------+---------+


9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose. 

SELECT * FROM customers WHERE EXISTS (SELECT * FROM customers WHERE city='SanJose');
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


10) Match salespeople to customers according to what city they live in. 

SELECT c.cname, s.sname, c.city FROM customers as c, salespeople as s WHERE s.city=c.city;
+----------+--------+---------+
| cname    | sname  | city    |
+----------+--------+---------+
| Hoffman  | Fran   | London  |
| Hoffman  | Motika | London  |
| Hoffman  | Peel   | London  |
| Liu      | Serres | SanJose |
| Clemens  | Fran   | London  |
| Clemens  | Motika | London  |
| Clemens  | Peel   | London  |
| Cisneros | Serres | SanJose |
+----------+--------+---------+

11) Find all the customers in SanJose who have a rating above 200. 

SELECT * FROM customers WHERE city='SanJose' AND rating>200;
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


12) List the names and commissions of all salespeople in London. 

SELECT sname, comm FROM salespeople WHERE city='London';
+--------+------+
| sname  | comm |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+


13) List all the orders of Salesperson Motika from the orders table.

SELECT o.* FROM orders as o, salespeople as s WHERE o.snum=s.snum AND s.sname='Motika';
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
+------+---------+------------+------+------+


14) Find all customers who booked orders on October 3. 

SELECT o.* FROM customers AS c, orders AS o WHERE o.cnum=c.cnum AND o.odate="1990-10-03";
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
+------+---------+------------+------+------+


15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 

SELECT SUM(amt), odate FROM orders GROUP BY odate HAVING SUM(amt) > (2000+ (SELECT MAX(amt) FROM orders));
Empty set (0.01 sec)


16) Select all orders that had amounts that were greater than at least one of the orders from October 6. 

SELECT * FROM orders WHERE amt > (SELECT MIN(o.amt) FROM orders AS o WHERE o.odate='1990-10-06');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.

SELECT * FROM salespeople AS s WHERE EXISTS (SELECT * FROM customers AS c WHERE c.snum=s.snum AND rating=300 );
+------+--------+-----------+------+
| snum | sname  | city      | comm |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+

18) Find all customers whose cnum is 1000 above the snum of Serres. 

SELECT * FROM customers WHERE cnum = (1000+ (SELECT snum FROM salespeople WHERE sname='Serres'));
+------+----------+------+--------+------+
| cnum | cname    | city | rating | snum |
+------+----------+------+--------+------+
| 2002 | Giovanni | Rome |    200 | 1003 |
+------+----------+------+--------+------+


19) Give the salespeopleâ€™s commissions as percentages instead of decimal numbers. 

SELECT *, ((comm/(SELECT SUM(comm) FROM salespeople))*100) AS 'commission in %' FROM salespeople ;
+------+---------+-----------+------+-----------------+
| snum | sname   | city      | comm | commission in % |
+------+---------+-----------+------+-----------------+
| 1001 | Peel    | London    |   12 |         13.9535 |
| 1002 | Serres  | SanJose   |   13 |         15.1163 |
| 1004 | Motika  | London    |   11 |         12.7907 |
| 1007 | Rifkin  | Barcelona |   15 |         17.4419 |
| 1003 | AxelRod | New York  |   10 |         11.6279 |
| 1008 | Fran    | London    |   25 |         w
+------+---------+-----------+------+-----------------+


20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000. 

SELECT MAX(amt), snum, odate FROM orders GROUP BY odate, snum HAVING MAX(amt)>=3000;
+----------+------+------------+
| MAX(amt) | snum | odate      |
+----------+------+------------+
|  5160.45 | 1002 | 1990-03-10 |
|  4723.00 | 1001 | 1990-05-10 |
|  9891.88 | 1001 | 1990-06-10 |
+----------+------+------------+


21) List all the largest orders for October 3, for each salesperson. 

SELECT MAX(amt),snum,odate FROM orders WHERE odate='1990-10-03' GROUP BY snum;
+----------+------+------------+
| MAX(amt) | snum | odate      |
+----------+------+------------+
|  1098.16 | 1007 | 1990-10-03 |
|   767.19 | 1001 | 1990-10-03 |
|  1900.10 | 1004 | 1990-10-03 |
|  5160.45 | 1002 | 1990-10-03 |
+----------+------+------------+
 
22) Find all customers located in cities where Serres has customers. 

SELECT * FROM customers WHERE city IN (SELECT c.city FROM customers as c, salespeople as s WHERE c.snum=s.snum AND s.sname='Serres');
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


23) Select all customers with a rating above 200. 

SELECT * FROM customers WHERE rating>200;
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


24) Count the number of salespeople currently having orders in the orders table. 

SELECT count(distinct snum) AS 'number of salespeople' FROM orders;
+-----------------------+
| number of salespeople |
+-----------------------+
|                     5 |
+-----------------------+


25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customerâ€™s name, salespersonâ€™s name and the salespersonâ€™s rate of commission. 

SELECT c.cname, commission_table.sname, commission_table.commission FROM (SELECT ((comm/(SELECT SUM(comm) FROM salespeople))*100) AS commission, sname, snum, comm FROM salespeople) AS commission_table, customers as c WHERE c.snum=commission_table.snum AND commission_table.commission >12 ;
+----------+--------+-----------+
| cname    | sname  | commision |
+----------+--------+-----------+
| Hoffman  | Peel   |   13.9535 |
| Liu      | Serres |   15.1163 |
| Grass    | Serres |   15.1163 |
| Clemens  | Peel   |   13.9535 |
| Cisneros | Rifkin |   17.4419 |
| Pereira  | Motika |   12.7907 |
+----------+--------+-----------+


26) Find salespeople who have multiple customers. 

SELECT s.* FROM customers AS c, salespeople as s WHERE s.snum=c.snum Group By c.snum HAVING COUNT(c.cnum)>1;
+------+--------+---------+------+
| snum | sname  | city    | comm |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+


27) Find salespeople with customers located in their own cities. 

SELECT c.cname, s.* FROM customers AS c, salespeople AS s WHERE c.snum=s.snum AND c.city=s.city;
+---------+------+--------+---------+------+
| cname   | snum | sname  | city    | comm |
+---------+------+--------+---------+------+
| Hoffman | 1001 | Peel   | London  |   12 |
| Liu     | 1002 | Serres | SanJose |   13 |
| Clemens | 1001 | Peel   | London  |   12 |
+---------+------+--------+---------+------+

28) Find all salespeople whose name starts with â€˜Pâ€™ and fourth character is â€˜Iâ€™. 

SELECT * FROM salespeople WHERE sname LIKE'P__i%';
Empty set (0.00 sec)


29) Write a query that uses a subquery to obtain all orders for the customer named â€˜Cisnerosâ€™. Assume you do not know his customer number. 

SELECT * FROM orders WHERE cnum IN (SELECT cnum FROM customers WHERE cname='Cisneros');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


30) Find the largest orders for Serres and Rifkin. 

SELECT max(o.amt), s.sname, o.snum, o.onum FROM salespeople AS s, orders AS o WHERE (s.snum=o.snum AND (s.sname='Serres' OR s.sname='Rifkin')) Group By o.snum ;
+------------+--------+------+------+
| max(o.amt) | sname  | snum | onum |
+------------+--------+------+------+
|    1098.16 | Rifkin | 1007 | 3001 |
|    5160.45 | Serres | 1002 | 3005 |
+------------+--------+------+------+


31) Sort the salespeople table in the following order: snum, sname, commission, city. 

SELECT * FROM Salespeople ORDER BY snum, sname, comm, city;
+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+


32) Select all customers whose names fall in between â€˜Aâ€™ and â€˜Gâ€™ alphabetical range. 

SELECT * FROM Customers WHERE cname BETWEEN 'A' AND 'G';
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2006 | Clemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


33) Select all the possible combinations of customers you can assign. 

SELECT c1.cname, c2.cname FROM customers AS c1, customers AS c2 WHERE c1.cnum <> c2.cnum;
+----------+----------+
| cname    | cname    |
+----------+----------+
| Pereira  | Hoffman  |
| Cisneros | Hoffman  |
| Clemens  | Hoffman  |
| Grass    | Hoffman  |
| Liu      | Hoffman  |
| Giovanni | Hoffman  |
| Pereira  | Giovanni |
| Cisneros | Giovanni |
| Clemens  | Giovanni |
| Grass    | Giovanni |
| Liu      | Giovanni |
| Hoffman  | Giovanni |
| Pereira  | Liu      |
| Cisneros | Liu      |
| Clemens  | Liu      |
| Grass    | Liu      |
| Giovanni | Liu      |
| Hoffman  | Liu      |
| Pereira  | Grass    |
| Cisneros | Grass    |
| Clemens  | Grass    |
| Liu      | Grass    |
| Giovanni | Grass    |
| Hoffman  | Grass    |
| Pereira  | Clemens  |
| Grass    | Clemens  |
| Liu      | Clemens  |
| Giovanni | Clemens  |
| Hoffman  | Clemens  |
| Pereira  | Cisneros |
| Grass    | Cisneros |
| Liu      | Cisneros |
| Giovanni | Cisneros |
| Hoffman  | Cisneros |
| Cisneros | Pereira  |
| Clemens  | Pereira  |
| Grass    | Pereira  |
| Liu      | Pereira  |
| Giovanni | Pereira  |
| Hoffman  | Pereira  |
+----------+----------+
40 rows in set (0.01 sec)

34) Select all orders that are greater than the average for October 4. 

SELECT * FROM Orders where AMT > (SELECT AVG(amt) FROM Orders where odate='1990-10-04');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


35) Write a select command using a correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city. 
 
SELECT cnum, cname FROM Customers as c WHERE rating = (SELECT MAX(rating) FROM Customers where city=c.city);
+------+----------+
| cnum | cname    |
+------+----------+
| 2001 | Hoffman  |
| 2002 | Giovanni |
| 2004 | Grass    |
| 2006 | Clemens  |
| 2006 | Cisneros |
+------+----------+


36) Write a query that totals the orders for each day and places the results in descending order. 

SELECT SUM(amt), odate FROM Orders GROUP BY odate ORDER BY SUM(amt) DESC;
+----------+------------+
| SUM(amt) | odate      |
+----------+------------+
| 11201.83 | 1990-10-06 |
|  8944.59 | 1990-10-03 |
|  4723.00 | 1990-10-05 |
|  1788.98 | 1990-10-04 |
+----------+------------+


37) Write a select command that produces the rating followed by each customer's name in SanJose. 

SELECT rating, cname FROM Customers WHERE city='SanJose';
+--------+----------+
| rating | cname    |
+--------+----------+
|    200 | Liu      |
|    300 | Cisneros |
+--------+----------+


38) Find all orders with amounts smaller than any amount for a customer in SanJose. 

SELECT * FROM Orders WHERE amt < ANY (SELECT o.amt FROM orders AS o, customers AS c WHERE c.cnum=o.cnum AND city='SanJose');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
+------+---------+------------+------+------+


39) Find all orders with above-average amounts for their customers. 

SELECT * FROM orders AS o1 HAVING amt > (SELECT AVG(o2.amt) FROM orders AS o2 WHERE o1.cnum=o2.cnum GROUP BY o2.cnum);
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

40) Write a query that selects the highest rating in each city. 

SELECT MAX(rating), city FROM Customers GROUP BY city;
+-------------+---------+
| MAX(rating) | city    |
+-------------+---------+
|         100 | London  |
|         200 | Rome    |
|         300 | SanJose |
|         300 | Berlin  |
+-------------+---------+


41) Write a query that calculates the amount of the salespersonâ€™s commission on each order by a customer with a rating above 100.00. 

SELECT oc.cname, oc.rating, oc.onum, oc.amt, s.comm  FROM ( SELECT o.*, c.cname, c.rating FROM customers AS c, orders AS o WHERE c.cnum = o.cnum    ) AS oc INNER JOIN salespeople AS s ON s.snum = oc.snum WHERE oc.rating > 100;
+----------+--------+------+---------+------+
| cname    | rating | onum | amt     | comm |
+----------+--------+------+---------+------+
| Cisneros |    300 | 3011 | 9891.88 |   12 |
| Cisneros |    300 | 3008 | 4723.00 |   12 |
| Grass    |    300 | 3010 | 1309.95 |   13 |
| Grass    |    300 | 3007 |   75.75 |   13 |
| Liu      |    200 | 3005 | 5160.45 |   13 |
| Giovanni |    200 | 3009 | 1713.23 |   10 |
+----------+--------+------+---------+------+


42) Count the customers with ratings above SanJoseâ€™s average. 

SELECT COUNT(*) AS count FROM Customers WHERE rating  > (SELECT AVG(rating) FROM Customers WHERE city='SanJose');
+-------+
| count |
+-------+
|     2 |
+-------+

43) Find all salespeople that are located in either Barcelona or London. 

SELECT * FROM Salespeople WHERE city='Barcelona' OR city='London';
+------+--------+-----------+------+
| snum | sname  | city      | comm |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+


44) Find all salespeople with only one customer. 

SELECT * FROM Salespeople WHERE snum IN (SELECT snum FROM Customers GROUP BY snum HAVING COUNT(cnum)=1);
+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
+------+---------+-----------+------+


45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.

SELECT COUNT(cnum) AS 'no of salespeople',cnum FROM customers GROUP BY cnum HAVING COUNT(cnum)=1;
+-------------------+------+
| no of salespeople | cnum |
+-------------------+------+
|                 1 | 2001 |
|                 1 | 2002 |
|                 1 | 2003 |
|                 1 | 2004 |
|                 1 | 2007 |
+-------------------+------+


46) Write a query that will give you all orders for more than $1000.00. 

SELECT * FROM orders WHERE amt>1000;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+


47) Write a query that lists each order number followed by the name of the customer who made that order. 

SELECT o.onum, c.cname FROM orders AS o, customers AS c WHERE o.cnum=c.cnum;
+------+----------+
| onum | cname    |
+------+----------+
| 3003 | Hoffman  |
| 3002 | Pereira  |
| 3005 | Liu      |
| 3009 | Giovanni |
| 3007 | Grass    |
| 3008 | Cisneros |
| 3008 | Clemens  |
| 3010 | Grass    |
| 3011 | Cisneros |
| 3011 | Clemens  |
+------+----------+


48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of â€˜Serresâ€™. 

SELECT * FROM customers WHERE rating > (SELECT MIN(c.rating) FROM customers AS c, salespeople AS s WHERE s.snum=c.snum AND s.sname='Serres');
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

49) Write two queries that will produce all orders taken on October 3 or October 4. 

SELECT * FROM Orders WHERE odate='1990-10-03' UNION SELECT * FROM Orders WHERE odate='1990-10-04';
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
+------+---------+------------+------+------+


50) Find only those customers whose ratings are higher than every customer in Rome. 

SELECT * FROM Customers WHERE rating > ALL (SELECT rating FROM Customers WHERE city='Rome');
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+



51) Write a query on the Customers table whose output will exclude all customers with a rating&lt;= 100.00, unless they are located in Rome. 

SELECT * FROM customers WHERE NOT rating=100 OR city='Rome';
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


52) Find all rows from the customerâ€™s table for which the salesperson number is 1001. 

SELECT * FROM customers WHERE snum=1001;
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+

53) Find the total amount in orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table. 

SELECT SUM(o.amt),o.snum,s.sname FROM orders AS o, salespeople AS s WHERE o.snum=s.snum GROUP BY snum HAVING SUM(o.amt)> (SELECT MAX(amt) FROM orders);
+--------------+------+-------+
| total amount | snum | sname |
+--------------+------+-------+
|     15382.07 | 1001 | Peel  |
+--------------+------+-------+

54) Write a query that selects all orders save those with zeroes or NULL in the amount file. 

SELECT * FROM orders INTO OUTFILE 'C:\ProgramData\MySQL\MySQL Server 8.0\Uploads\amount.txt'; WHERE amt=0 OR amt IS NULL;


55) Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200. 

SELECT s.sname, c.cname, c.rating FROM salespeople s, customers c WHERE s.snum=c.snum AND s.sname < c.cname AND c.rating<200;
+--------+---------+--------+
| sname  | cname   | rating |
+--------+---------+--------+
| Motika | Pereira |    100 |
+--------+---------+--------+


56) Find all salespeople name and commission. 

SELECT s.sname, (s.comm*COUNT(o.snum)) AS 'total commission from all orders' FROM orders AS o, salespeople AS s WHERE s.snum=o.snum GROUP BY o.snum;
+---------+----------------------------------+
| sname   | total commission from all orders |
+---------+----------------------------------+
| Rifkin  |                               30 |
| Peel    |                               36 |
| Motika  |                               11 |
| Serres  |                               39 |
| AxelRod |                               10 |
+---------+----------------------------------+

57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. 
Write the query using Hoffmanâ€™s cnum rather than his rating, so that it would still be usable if his rating is changed. 

SELECT c.cname, c.rating FROM customers c WHERE rating = (SELECT rating FROM customers WHERE cnum = (SELECT cnum FROM customers WHERE cname='Hoffman')) AND  NOT cname = 'Hoffman';
+---------+--------+
| cname   | rating |
+---------+--------+
| Clemens |    100 |
| Pereira |    100 |
+---------+--------+


58) Find all salespeople for whom there are customers that follow them in alphabetical order. 

SELECT c.cname, s.sname FROM salespeople s, customers c WHERE s.snum=c.snum AND c.cname<s.sname;
+----------+--------+
| cname    | sname  |
+----------+--------+
| Hoffman  | Peel   |
| Liu      | Serres |
| Grass    | Serres |
| Clemens  | Peel   |
| Cisneros | Rifkin |
+----------+--------+


59) Write a query that produces the names and ratings of all customers who have average orders. 

SELECT c.cname, c.rating FROM customers c, orders o WHERE c.cnum=o.cnum AND o.amt >= (SELECT AVG(amt) FROM orders);
+----------+--------+
| cname    | rating |
+----------+--------+
| Liu      |    200 |
| Clemens  |    100 |
| Clemens  |    100 |
| Cisneros |    300 |
| Cisneros |    300 |
+----------+--------+


60) Find the SUM of all Amounts from the orders table. 

SELECT SUM(amt) AS 'total amount' FROM orders;
+--------------+
| total amount |
+--------------+
|     26658.40 |
+--------------+

61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table. 

SELECT onum, amt, odate FROM orders;
+------+---------+------------+
| onum | amt     | odate      |
+------+---------+------------+
| 3001 |   18.69 | 1990-10-03 |
| 3003 |  767.19 | 1990-10-03 |
| 3002 | 1900.10 | 1990-10-03 |
| 3005 | 5160.45 | 1990-10-03 |
| 3006 | 1098.16 | 1990-10-03 |
| 3009 | 1713.23 | 1990-10-04 |
| 3007 |   75.75 | 1990-10-04 |
| 3008 | 4723.00 | 1990-10-05 |
| 3010 | 1309.95 | 1990-10-06 |
| 3011 | 9891.88 | 1990-10-06 |
+------+---------+------------+

62) Count the number of non NULL rating fields in the Customers table (including repeats). 

SELECT COUNT(*) AS 'non null ratings' FROM customers WHERE rating IS NOT NULL;
+------------------+
| non null ratings |
+------------------+
|                7 |
+------------------+

63) Write a query that gives the names of both the salesperson and the customer for each order after the order number. 

SELECT o.onum, s.sname, c.cname FROM orders AS o, salespeople AS s, customers AS c WHERE o.snum=s.snum AND o.cnum=c.cnum;
+------+---------+----------+
| onum | sname   | cname    |
+------+---------+----------+
| 3003 | Peel    | Hoffman  |
| 3009 | AxelRod | Giovanni |
| 3005 | Serres  | Liu      |
| 3010 | Serres  | Grass    |
| 3007 | Serres  | Grass    |
| 3011 | Peel    | Clemens  |
| 3008 | Peel    | Clemens  |
| 3011 | Peel    | Cisneros |
| 3008 | Peel    | Cisneros |
| 3002 | Motika  | Pereira  |
+------+---------+----------+


64) List the commissions of all salespeople servicing customers in London. 

SELECT s.sname, s.comm, c.cname, c.city FROM salespeople s, customers c WHERE s.snum=c.snum AND c.city='London';
+-------+------+---------+--------+
| sname | comm | cname   | city   |
+-------+------+---------+--------+
| Peel  |   12 | Clemens | London |
| Peel  |   12 | Hoffman | London |
+-------+------+---------+--------+


65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city. 

SELECT * FROM salespeople s WHERE NOT s.city = ALL (SELECT c.city FROM customers c WHERE c.snum=s.snum); 
+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
+------+---------+-----------+------+


66) Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them. 

SELECT s.* FROM salespeople s WHERE EXISTS (SELECT * FROM customers c WHERE c.city=s.city AND s.snum!=c.snum);
+------+--------+---------+------+
| snum | sname  | city    | comm |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+


67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.) 

SELECT c.*, s.sname FROM customers AS c, salespeople AS s WHERE c.snum=s.snum AND (s.sname='Peel' || s.sname='Motika');
+------+---------+--------+--------+------+--------+
| cnum | cname   | city   | rating | snum | sname  |
+------+---------+--------+--------+------+--------+
| 2001 | Hoffman | London |    100 | 1001 | Peel   |
| 2006 | Clemens | London |    100 | 1001 | Peel   |
| 2007 | Pereira | Rome   |    100 | 1004 | Motika |
+------+---------+--------+--------+------+--------+

68) Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.) 

SELECT COUNT(DISTINCT snum) no_of_orders, odate FROM orders GROUP BY odate;
+--------------+------------+
| no_of_orders | odate      |
+--------------+------------+
|            4 | 1990-10-03 |
|            2 | 1990-10-04 |
|            1 | 1990-10-05 |
|            2 | 1990-10-06 |
+--------------+------------+


69) Find all orders attributed to salespeople who live in London. 

SELECT o.*, s.sname, s.city FROM salespeople AS s, orders AS o WHERE o.snum=s.snum AND s.city='London';
+------+---------+------------+------+------+--------+--------+
| onum | amt     | odate      | cnum | snum | sname  | city   |
+------+---------+------------+------+------+--------+--------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 | Peel   | London |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 | Motika | London |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 | Peel   | London |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 | Peel   | London |
+------+---------+------------+------+------+--------+--------+


70) Find all orders by customers not located in the same cities as their salespeople. 

SELECT o.*, c.cname, c.city, s.sname, s.city FROM salespeople s, customers c, orders o WHERE o.snum=s.snum AND c.cnum=o.cnum AND NOT c.city=s.city;
+------+---------+------------+------+------+----------+---------+---------+----------+
| onum | amt     | odate      | cnum | snum | cname    | city    | sname   | city     |
+------+---------+------------+------+------+----------+---------+---------+----------+
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 | Giovanni | Rome    | AxelRod | New York |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 | Grass    | Berlin  | Serres  | SanJose  |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 | Grass    | Berlin  | Serres  | SanJose  |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 | Cisneros | SanJose | Peel    | London   |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 | Cisneros | SanJose | Peel    | London   |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 | Pereira  | Rome    | Motika  | London   |
+------+---------+------------+------+------+----------+---------+---------+----------+


71) Find all salespeople who have customers with more than one current order. 

SELECT COUNT(*) AS 'no of orders', cnum, snum FROM orders GROUP BY cnum HAVING COUNT(*)>1;
+--------------+------+------+
| no of orders | cnum | snum |
+--------------+------+------+
|            2 | 2008 | 1007 |
|            2 | 2004 | 1002 |
|            2 | 2006 | 1001 |
+--------------+------+------+


72) Write a query that extracts from the customerâ€™s table every customer assigned to a salesperson, who is currently having at least one another customer(besides the customer being selected) with orders in the Orders Table. 



73) Write a query on the customerâ€™s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest rating is (rating). 

SELECT city, MAX(rating) FROM customers GROUP BY city;
+---------+-------------+
| city    | MAX(rating) |
+---------+-------------+
| London  |         100 |
| Rome    |         200 |
| SanJose |         300 |
| Berlin  |         300 |
+---------+-------------+


74) Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without repeats). 

SELECT DISTINCT snum FROM orders WHERE amt > 1000;
+------+
| snum |
+------+
| 1004 |
| 1002 |
| 1007 |
| 1003 |
| 1001 |
+------+


75) Write a query that lists customers in a descending order of rating. Output the rating field first, followed by the customerâ€™s names and numbers. 

SELECT rating, cname, cnum FROM customers ORDER BY rating DESC;
+--------+----------+------+
| rating | cname    | cnum |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2006 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+


76) Find the average commission for salespeople in London. 

SELECT AVG(comm) FROM salespeople WHERE city='London';
+-----------+
| AVG(comm) |
+-----------+
|   16.0000 |
+-----------+

77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001). 

SELECT o.* FROM orders AS o, customers AS c WHERE o.snum=c.snum AND c.cname='Hoffman';
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive). 

SELECT * FROM salespeople WHERE comm BETWEEN 10 AND 12;
+------+---------+----------+------+
| snum | sname   | city     | comm |
+------+---------+----------+------+
| 1001 | Peel    | London   |   12 |
| 1004 | Motika  | London   |   11 |
| 1003 | AxelRod | New York |   10 |
+------+---------+----------+------+


79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

SELECT SUM(comm) FROM salespeople;
+-----------+
| SUM(comm) |
+-----------+
|        86 |
+-----------+

SELECT sname, city, comm/86 AS 'commission' FROM salespeople WHERE city='London' AND (comm/86)>0.1;
+--------+--------+------------+
| sname  | city   | commission |
+--------+--------+------------+
| Peel   | London |     0.1395 |
| Motika | London |     0.1279 |
| Fran   | London |     0.2907 |
+--------+--------+------------+


80) Write a query that selects each customerâ€™s smallest order. 

SELECT MIN(amt) AS 'smallest order', orders.* FROM orders GROUP BY cnum;
+----------------+------+---------+------------+------+------+
| smallest order | onum | amt     | odate      | cnum | snum |
+----------------+------+---------+------------+------+------+
|          18.69 | 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
|         767.19 | 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
|        1900.10 | 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
|        5160.45 | 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
|        1713.23 | 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
|          75.75 | 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
|        4723.00 | 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
+----------------+------+---------+------------+------+------+





81) Write a query that selects the first customer in alphabetical order whose name begins with â€˜Gâ€™. 

SELECT cname FROM customers WHERE cname LIKE 'G%' ORDER BY cname LIMIT 1;
+----------+
| cname    |
+----------+
| Giovanni |
+----------+


82) Write a query that counts the number of different non NULL city values in the customers table. 

SELECT COUNT(DISTINCT city) FROM customers WHERE city IS NOT NULL;
+----------------------+
| COUNT(DISTINCT city) |
+----------------------+
|                    4 |
+----------------------+


83) Find the average amount from the Orders Table. 

SELECT AVG(amt) FROM orders;
+-------------+
| AVG(amt)    |
+-------------+
| 2665.840000 |
+-------------+


84) Find all customers who are not located in SanJose and whose rating is above 200. 

SELECT * FROM customers WHERE NOT city='SanJose' AND rating>200;
+------+-------+--------+--------+------+
| cnum | cname | city   | rating | snum |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+


85) Give a simpler way to write this query.SELECT snum, sname, city, comm FROM salespeople WHERE (comm > + 0.12 OR comm &lt; 0.14); 

// '&lt;' in question misprinted

SELECT * FROM salespeople;



86) Which salespersons attend to customers not in the city they have been assigned to? 

SELECT s.sname, s.city, c.cname, c.city FROM salespeople s, customers c WHERE c.snum=s.snum AND NOT c.city=s.city;
+---------+-----------+----------+---------+
| sname   | city      | cname    | city    |
+---------+-----------+----------+---------+
| AxelRod | New York  | Giovanni | Rome    |
| Serres  | SanJose   | Grass    | Berlin  |
| Rifkin  | Barcelona | Cisneros | SanJose |
| Motika  | London    | Pereira  | Rome    |
+---------+-----------+----------+---------+


87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

SELECT s.snum, s.sname, s.comm, c.cnum, c.cname, c.rating FROM salespeople s, customers c WHERE s.snum=c.snum AND s.comm>11 AND c.rating <250;
+------+--------+------+------+---------+--------+
| snum | sname  | comm | cnum | cname   | rating |
+------+--------+------+------+---------+--------+
| 1001 | Peel   |   12 | 2001 | Hoffman |    100 |
| 1002 | Serres |   13 | 2003 | Liu     |    200 |
| 1001 | Peel   |   12 | 2006 | Clemens |    100 |
+------+--------+------+------+---------+--------+


88) Which salespeople have been assigned to the same city but get different commission percentages? 

SELECT s1.*, s2.* FROM salespeople s1, salespeople s2 WHERE s1.city=s2.city AND NOT s1.comm=s2.comm AND NOT s1.snum=s2.snum;
+------+--------+--------+------+------+--------+--------+------+
| snum | sname  | city   | comm | snum | sname  | city   | comm |
+------+--------+--------+------+------+--------+--------+------+
| 1008 | Fran   | London |   25 | 1001 | Peel   | London |   12 |
| 1004 | Motika | London |   11 | 1001 | Peel   | London |   12 |
| 1008 | Fran   | London |   25 | 1004 | Motika | London |   11 |
| 1001 | Peel   | London |   12 | 1004 | Motika | London |   11 |
| 1004 | Motika | London |   11 | 1008 | Fran   | London |   25 |
| 1001 | Peel   | London |   12 | 1008 | Fran   | London |   25 |
+------+--------+--------+------+------+--------+--------+------+

89) Which salesperson has earned the maximum commission? 

SELECT MAX(table1.commission) max_commision, table1.snum FROM (SELECT (SUM(o.amt)*s.comm)/100 commission, o.snum FROM orders o, salespeople s WHERE o.snum=s.snum GROUP BY o.snum) AS table1;
+---------------+------+
| max_commision | snum |
+---------------+------+
|   1845.848400 | 1007 |
+---------------+------+


90) Does the customer who has placed the maximum number of orders have the maximum rating? 

SELECT cnum, rating FROM customers WHERE rating = (SELECT MAX(rating) FROM customers);
+------+--------+
| cnum | rating |
+------+--------+
| 2004 |    300 |
| 2006 |    300 |
+------+--------+


91) List all customers in descending order of customer rating. 

SELECT * FROM customers ORDER BY rating DESC;
+------+----------+---------+--------+------+
| cnum | cname    | city    | rating | snum |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


92) On which days has Hoffman placed orders? 

SELECT o.onum, o.odate, c.cname FROM orders AS o, customers AS c WHERE o.cnum=c.cnum AND c.cname='Hoffman';
+------+------------+---------+
| onum | odate      | cname   |
+------+------------+---------+
| 3003 | 1990-10-03 | Hoffman |
+------+------------+---------+


93) Which salesmen have no orders between 10/03/1990 and 10/05/1990? 

SELECT onum, snum FROM orders WHERE odate NOT BETWEEN '1990-10-03' AND '1990-10-05';
+------+------+
| onum | snum |
+------+------+
| 3010 | 1002 |
| 3011 | 1001 |
+------+------+


94) How many salespersons have succeeded in getting orders? 

SELECT COUNT(DISTINCT snum) AS 'no of salespeople' FROM orders;
+-------------------+
| no of salespeople |
+-------------------+
|                 5 |
+-------------------+

or 

SELECT COUNT(*) 'no of salespeople' FROM (SELECT snum FROM orders GROUP BY snum) table1;
+-------------------+
| no of salespeople |
+-------------------+
|                 5 |
+-------------------+


95) How many customers have placed orders? 

SELECT COUNT(DISTINCT cnum) AS 'no of customers' FROM orders;
+-----------------+
| no of customers |
+-----------------+
|               7 |
+-----------------+


96) On which date has each salesman booked an order of maximum value? 

SELECT snum, odate, MAX(amt) 'max amt' FROM orders GROUP BY snum;
+------+------------+---------+
| snum | odate      | max amt |
+------+------------+---------+
| 1007 | 1990-10-03 | 1098.16 |
| 1001 | 1990-10-03 | 9891.88 |
| 1004 | 1990-10-03 | 1900.10 |
| 1002 | 1990-10-03 | 5160.45 |
| 1003 | 1990-10-04 | 1713.23 |
+------+------------+---------+


97) Who is the most successful salesperson? 

SELECT o.snum, s.sname, (SUM(o.amt)*s.comm)/100 'commission' FROM orders o, salespeople s WHERE s.snum=o.snum  GROUP BY o.snum ORDER BY commission DESC LIMIT 1;
+------+-------+-------------+
| snum | sname | commission  |
+------+-------+-------------+
| 1001 | Peel  | 1845.848400 |
+------+-------+-------------+


98) Which customers have the same rating? 

SELECT c1.cname, c2.cname, c1.rating FROM customers c1, customers c2 WHERE c1.cnum!=c2.cnum AND c1.rating=c2.rating;
+----------+----------+--------+
| cname    | cname    | rating |
+----------+----------+--------+
| Pereira  | Hoffman  |    100 |
| Clemens  | Hoffman  |    100 |
| Liu      | Giovanni |    200 |
| Giovanni | Liu      |    200 |
| Cisneros | Grass    |    300 |
| Pereira  | Clemens  |    100 |
| Hoffman  | Clemens  |    100 |
| Grass    | Cisneros |    300 |
| Clemens  | Pereira  |    100 |
| Hoffman  | Pereira  |    100 |
+----------+----------+--------+


99) Find all orders greater than the average for October 4th. 

 SELECT * FROM orders WHERE amt > (SELECT AVG(amt) FROM orders WHERE odate='1990-10-04');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


100) List all customers with ratings above Grassâ€™s average. 

SELECT * FROM customers WHERE rating > (SELECT AVG(rating) FROM customers WHERE cname='Grass');
Empty set (0.00 sec)


101) Which customers have above average orders? 

SELECT * FROM orders WHERE amt > (SELECT AVG(amt) FROM orders) GROUP BY cnum;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3008 | 4723.00 | 1990-10-05 | 2006 | 1001 |
+------+---------+------------+------+------+


102) Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table. 

SELECT SUM(amt) 'total amt', snum FROM orders GROUP BY snum HAVING SUM(amt)> (SELECT MAX(amt) FROM orders);
+-----------+------+
| total amt | snum |
+-----------+------+
|  15382.07 | 1001 |
+-----------+------+


103) Give names and numbers of all salespersons that have more than one customer? 

SELECT c.snum, s.sname FROM customers c, salespeople s WHERE c.snum=s.snum GROUP BY c.snum HAVING COUNT(*)>1;
+------+--------+
| snum | sname  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+


104) Select all salespeople by name and number who have customers in their city whom they donâ€™t service. 

SELECT s.sname, s.snum, c.cname, c.snum 'serving salesperson' FROM customers c, salespeople s WHERE s.snum!=c.snum AND s.city=c.city;
+--------+------+----------+---------------------+
| sname  | snum | cname    | serving salesperson |
+--------+------+----------+---------------------+
| Fran   | 1008 | Hoffman  |                1001 |
| Motika | 1004 | Hoffman  |                1001 |
| Fran   | 1008 | Clemens  |                1001 |
| Motika | 1004 | Clemens  |                1001 |
| Serres | 1002 | Cisneros |                1007 |
+--------+------+----------+---------------------+


105) Does the total amount in orders by customer in Rome and London, exceed the commission paid to salesperson in London, and New York by more than 5 times? 

SELECT (SELECT SUM(o.amt) FROM orders o, customers c WHERE c.cnum=o.cnum AND city IN ('Rome','London')) 'total amount', (SELECT SUM((o.amt*s.comm)/100)*5 FROM orders o, salespeople s WHERE s.snum=o.snum AND city IN ('London', 'New York')) 'total commission';
+--------------+------------------+
| total amount | total commission |
+--------------+------------------+
|     18995.40 |     11130.912000 |
+--------------+------------------+


106) Which are the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained? 

SELECT o.onum, o.odate, MAX(o.amt) 'max amt', s.city, s.sname FROM salespeople s, orders o WHERE o.snum=s.snum GROUP BY o.snum;
+------+------------+---------+-----------+---------+
| onum | odate      | max amt | city      | sname   |
+------+------------+---------+-----------+---------+
| 3001 | 1990-10-03 | 1098.16 | Barcelona | Rifkin  |
| 3003 | 1990-10-03 | 9891.88 | London    | Peel    |
| 3002 | 1990-10-03 | 1900.10 | London    | Motika  |
| 3005 | 1990-10-03 | 5160.45 | SanJose   | Serres  |
| 3009 | 1990-10-04 | 1713.23 | New York  | AxelRod |
+------+------------+---------+-----------+---------+


107) Which salesperson is having lowest commission? 

SELECT snum, sname, city, MIN(comm) 'comm' FROM salespeople;
+------+-------+--------+------+
| snum | sname | city   | comm |
+------+-------+--------+------+
| 1001 | Peel  | London |   10 |
+------+-------+--------+------+
